commit_format_tests:
  - id: correct-commit-format
    description: Commits should use bracketed type format with proper spacing
    compliant_examples:
      - "[feat] add user authentication system"
      - "[fix ] correct validation logic for empty inputs"
      - "[docs] update API documentation for user endpoints"
      - "[styl] format code according to prettier rules"
      - "[refr] extract validation logic into separate functions"
      - "[test] add comprehensive tests for user registration"
      - "[chre] update dependencies to latest versions"
    
  - id: incorrect-commit-format
    description: Common commit format mistakes to avoid
    non_compliant_examples:
      - "feat: add user authentication"  # missing brackets
      - "[feat]: add user authentication"  # colon after brackets
      - "[FEAT] add user authentication"  # uppercase
      - "[feat] Add user authentication"  # capitalized description
      - "[feat] add user authentication."  # period at end
      - "[feat] added user authentication"  # past tense
      - "add user authentication"  # no type
      
  - id: commit-length-compliance
    description: Commit headers should be under 50 characters
    compliant_example: "[feat] add OAuth integration"  # 29 chars
    non_compliant_example: "[feat] add comprehensive user authentication system with OAuth and social login support"  # 95 chars
    
  - id: atomic-commits
    description: Each commit should represent one logical change
    compliant_approach: |
      [feat] add user registration form
      [test] add tests for user registration
      [docs] document user registration API
    non_compliant_approach: |
      [feat] add user registration, fix validation bug, update docs