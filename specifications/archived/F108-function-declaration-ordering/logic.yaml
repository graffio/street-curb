rule_implementation:
  name: function-declaration-ordering
  type: ast_based
  integration_point: tools/lib/api.js
  
  target_violations:
    - multi_line_functions_not_at_block_top
    - arrow_function_assignments_not_at_block_top
    
  scope_definition:
    hoist_to: nearest_opening_brace
    before: 
      - variable_declarations
      - executable_statements
    after:
      - opening_brace
      - function_comments
      
  function_types_to_check:
    - FunctionDeclaration
    - VariableDeclarator_with_ArrowFunctionExpression
    - VariableDeclarator_with_FunctionExpression
    
  exclusions:
    single_line_anonymous: true  # Per A001: single-line functions can remain inline
    
  ast_traversal:
    visitor_pattern: depth_first
    block_types:
      - BlockStatement
      - FunctionBody
      - ArrowFunctionBody
      - ConditionalBlock
      - TryBlock
      - CatchBlock
      
  violation_detection:
    algorithm: >
      For each block, collect all function declarations and variable declarations
      with function expressions. Check if functions appear after any non-function
      statements (excluding comments). Report violations with line/column info.
      
  error_messages:
    function_not_at_top: "Function '{name}' should be defined at the top of its containing block"
    arrow_function_not_at_top: "Arrow function '{name}' should be defined at the top of its containing block"
    
  integration:
    export_function: checkFunctionDeclarationOrdering
    import_in: tools/lib/api.js
    call_signature: "(ast, sourceCode, filePath) -> [Violation]"