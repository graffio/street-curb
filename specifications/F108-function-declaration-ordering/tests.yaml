tests:
  - id: validate-functions-at-block-top
    description: Functions should be at top of their containing block
    input:
      code: |
        const processData = (data) => {
            const validateUser = user => {
                if (!user.email) return false
                if (!user.name || user.name.length < 2) return false
                return user.isActive !== false
            }
            
            const enrichUserData = user => {
                const baseData = { ...user, processed: true }
                const timestamp = new Date().toISOString()
                return { ...baseData, processedAt: timestamp }
            }
            
            const validUsers = data.filter(validateUser)
            return validUsers.map(enrichUserData)
        }
    expect:
      - no violations (functions are at top)
      
  - id: detect-function-after-statement
    description: Should detect function defined after executable statement
    input:
      code: |
        const processData = (data) => {
            const validUsers = data.filter(user => user.isActive)
            
            const enrichUserData = user => {
                const baseData = { ...user, processed: true }
                const timestamp = new Date().toISOString()
                return { ...baseData, processedAt: timestamp }
            }
            
            return validUsers.map(enrichUserData)
        }
    expect:
      - violation: "Function 'enrichUserData' should be defined at the top of its containing block"
      
  - id: detect-function-after-variable
    description: Should detect function defined after variable declaration
    input:
      code: |
        const processData = (data) => {
            const config = { version: '1.0', includeTimestamp: true }
            
            const enrichUserData = user => {
                const baseData = { ...user, processed: true }
                const timestamp = config.includeTimestamp ? new Date().toISOString() : null
                return timestamp ? { ...baseData, processedAt: timestamp } : baseData
            }
            
            return data.map(enrichUserData)
        }
    expect:
      - violation: "Arrow function 'enrichUserData' should be defined at the top of its containing block"
      
  - id: allow-single-line-inline
    description: Should allow single-line anonymous functions to remain inline
    input:
      code: |
        const processData = (data) => {
            const validUsers = data.filter(user => user.isActive)
            return validUsers.map(user => ({ ...user, processed: true }))
        }
    expect:
      - no violations (single-line anonymous functions allowed inline)
      
  - id: check-nested-blocks
    description: Should check function ordering within nested blocks
    input:
      code: |
        const processData = (data) => {
            if (data.length > 0) {
                const userCount = data.length
                
                const validateAndEnrich = user => {
                    if (!user.email) return null
                    const enriched = { ...user, processed: true, count: userCount }
                    return enriched
                }
                
                return data.filter(user => user.isActive).map(validateAndEnrich)
            }
            return []
        }
    expect:
      - violation: "Function 'validateAndEnrich' should be defined at the top of its containing block"