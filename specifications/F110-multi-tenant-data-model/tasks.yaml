current_task: "task_1_domain_events"
status: "pending"

# Reference: See docs/architecture/multi-tenant.md for detailed organization/project patterns, data isolation rules, and role hierarchy

tasks:
  - id: "task_1_domain_events"
    description: "Define organization, project, and user Action types and event handlers"
    status: "pending"
    phase: "Domain Model"
    dependencies: []
    estimated_hours: 12
    implementation: |
        - Create test auth helpers in `modules/curb-map/test-utils/auth-helpers.js`:
          * createTestUser(userId, organizationId, role) - for Firebase Auth emulator
          * mockAuthContext(userId, claims) - inject auth context in tests
          * clearTestUsers() - cleanup helper
        - Define Action tagged types in `modules/curb-map/type-definitions/`:
          * Organization actions: OrganizationCreated, OrganizationUpdated, OrganizationDeleted
          * Project actions: ProjectCreated, ProjectUpdated, ProjectDeleted
          * User actions: UserAdded, UserUpdated, UserRemoved, RoleAssigned
        - Create event handlers in `modules/curb-map/functions/src/events/`:
          * organizationHandlers.js - organization domain logic
          * projectHandlers.js - project domain logic (with org scoping)
          * userHandlers.js - user/membership management
        - Integrate handlers with F108 giant function (handle-action-request-added.js):
          * Add dispatch logic to route actions to appropriate handlers
          * Handlers write to hierarchical collections: /organizations/{orgId}/projects/{projId}
        - Implement basic validation in event handlers (names, required fields)
        - Use Firebase Auth emulator for testing (no production auth yet)
    validation:
      - "Test auth helpers work with Firebase Auth emulator"
      - "Action types defined with proper schemas"
      - "Event handlers validate business rules correctly"
      - "Handlers integrate with F108 orchestration layer"
      - "Hierarchical collections work correctly"
    tests:
      - "modules/curb-map/test/auth-helpers.tap.js"
      - "modules/curb-map/functions/test/organization-handlers.tap.js"
      - "modules/curb-map/functions/test/project-handlers.tap.js"
      - "modules/curb-map/functions/test/user-handlers.tap.js"
      - "modules/curb-map/functions/test/domain-integration.firebase.js"
    notes: |
      This task defines the complete domain model for multi-tenancy.

      SCOPE:
      - Action type definitions (tagged types for all domain events)
      - Event handlers (domain logic that processes actions)
      - F108 integration (dispatch from giant function to handlers)
      - Basic validation (structure, required fields)
      - Test auth helpers (minimal for testing only)

      OUT OF SCOPE (deferred to later specs):
      - CRUD APIs (need full auth system) - backlog
      - Authorization/permissions (need auth system) - F110.5
      - Materialized views (UI needs these) - F110.6
      - Data isolation middleware (part of auth) - F110.5
      - Load testing and production monitoring - backlog

      This completes the domain model definition, enabling F110.5 to implement proper authorization.

completed: []

deleted_as_overengineered:
  - "task_1_2: organization CRUD API - needs F110.5 auth system"
  - "task_1_3: organization validation - redundant with handler validation"
  - "task_2_2: project CRUD API - needs F110.5 auth system"
  - "task_2_3: project validation - redundant with handler validation"
  - "task_3_1-3_3: materialized views - premature, can add after events work"
  - "task_4_1-4_3: data isolation middleware - belongs in F110.5 with auth"
  - "task_5_1-5_3: role-based permissions - belongs in F110.5 with auth"
  - "task_6_1-6_2: integration/load testing - basic tests in task_1 sufficient for MVP"

notes: |
    This specification implements the multi-tenant domain model for CurbMap.

    SCOPE: This spec covers domain model definition only:
    - Organization, project, and user Action types (tagged types)
    - Event handlers for domain logic (organization/project/user management)
    - F108 integration (dispatch from giant function to handlers)
    - Hierarchical Firestore collections (/organizations/{orgId}/projects/{projId})
    - Test auth helpers (minimal for testing only)

    OUT OF SCOPE (belongs in other specs):
    - CRUD APIs: backlog (after auth system exists, for external integrations)
    - Authorization/permissions: F110.5 (after domain model exists)
    - Materialized views: F110.6 (basic views for F113 UI)
    - Data isolation middleware: F110.5 (part of auth system)

    DEPENDS ON:
    - F108: Event sourcing infrastructure (completed)

    Domain event handlers in this spec are dispatched by F108 handle-action-request-added.js.

    Task ID format: task_{phase}_{sequence}_{description}
    Status values: pending, in_progress, completed, blocked, cancelled
    Dependencies: List of task IDs that must be completed first
    Validation: Specific criteria that must be met for task completion
